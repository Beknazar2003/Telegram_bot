const { Telegraf } = require('telegraf')
const {BOT_TOKEN} = require('./config')
const weather = require('weather-js')

const bot = new Telegraf(BOT_TOKEN)

bot.start((ctx) => ctx.reply('–ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏ –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, –∞ –ø—Ä–∏—à–ª—é —Ç–µ–±–µ –ü–æ–≥–æ–¥—É –≤ —ç—Ç–æ–º –≥–æ—Ä–æ–¥–µ'))
bot.command('news', (ctx) => {
    const rp = require('request-promise')
    const $ = require('cheerio')

    const URL = 'https://24.kg'
    const news = []

    rp(URL)
    .then(function(html){
        //success!
        
        news.push({
        new: $('.title > a > span', html).first().text().slice(),
        time: $('.time', html).first().text().slice(),
        href: URL + $('.one > .title > a' , html).attr('href')
        })
        ctx.reply(news[0].time + ' ' + news[0].new + ' ' + news[0].href)
    })
    .catch(function(err){
        //handle error
    });
})
bot.command('time', (ctx) => {
    const now = new Date()
    ctx.reply(now.getHours() + ':' + now.getMinutes())
})
bot.help((ctx) => {
    ctx.reply('–ß—ë –Ω–µ –º–æ–∂–µ—à—å —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è üòÇ –ü–∞—à—ë–ª –Ω–∞—Ö—É–π')
    ctx.replyWithSticker('CAACAgIAAxkBAAECF9NgWcqqP49ls5bUKLL_sewYbzY3tgACDAMAArVx2gZOgc1a7F4a-x4E')
})
bot.on('sticker', (ctx) => {
    ctx.replyWithSticker('CAACAgIAAxkBAAECF9VgWcrgfKNg8GEBsKVTEqYQkkiUSgACJgMAArVx2gY-GQuL5xwZQB4E')
    ctx.reply('–ö–ª–∞—Å—Å–Ω—ã–π —Å—Ç–∏–∫–µ—Ä –Ω–æ –Ω–∞—Ö—É—è –æ–Ω –º–Ω–µ')
})

// bot.hears(helloMsg, (ctx) => ctx.reply('–ü—Ä–∏–≤–µ—Ç—Å–≤—É—é, —á—ë –Ω–∞–¥–æ?'))

bot.on('message', (ctx) => {
    switch(ctx.update.message.text) {
        case '–ü—Ä–∏–≤–µ—Ç':
        case '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π':
        case 'Hello':
          ctx.reply('–ü—Ä–∏–≤–µ—Ç—Å–≤—É—é, —á—ë –Ω–∞–¥–æ?')
        break
        default:
            weather.find({search: ctx.update.message.text, degreeType: 'C'}, async (err, result) => {
                if(err) console.log(err)
                console.log(result)
                if (result[0]){
                    await ctx.reply('–í –≥–æ—Ä–æ–¥–µ ' + result[0].location.name + ' —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ' + result[0].current.temperature)
                    await ctx.reply('–ü–æ–≥–æ–¥–∞: ' + result[0].current.skytext)
                    if(result[0].current.temperature <= 0){
                        await ctx.reply('–ï–±–∞—Ç—å –¥—É–±–µ–æ! –û–¥–µ–Ω—å—Å—è –∫–∞–∫ —Ç–∞–Ω–∫. –ò –Ω–µ –∑–∞–±—É–¥—å —à–∞–ø–∫—É(–Ω–µ –±—É–¥—å –¥–∞–ª–±–∞—ë–±–æ–º)')
                    }
                    if(result[0].current.temperature <= 14 && result[0].current.temperature >= 1){
                        await ctx.reply('–ü—Ä–æ—Ö–ª–∞–¥–Ω–µ–Ω—å–∫–æ! –û–¥–µ–Ω—å—Å—è –ø–æ—Ç–µ–ø–ª–µ–µ.')
                    }
                    if(result[0].current.temperature <= 20 && result[0].current.temperature >= 15){
                        await tx.reply('–ù–æ—Ä–º! –ú–æ–∂–Ω–æ —Å–∫–∞–∑–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω–∞—è –ø–æ–≥–æ–¥–∞! –û–¥–µ–Ω—å—Å—è –∫–∞–∫ —Ö–æ—á–µ—à—å')
                    }
                    if(result[0].current.temperature > 20){
                        await ctx.reply('–ü–∑–¥—Ü –∂–∞—Ä–∏—â–∞! –û–¥–µ–Ω—å —á—Ç–æ —É–≥–æ–¥–Ω–æ.')
                    }
                }else{
                    ctx.reply('–¢—ã —á—ë —É–µ–±–∞–Ω —Ç–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –Ω–µ—Ç??')
                    
                }
            })
          break
      }
})
bot.launch()
// Enable graceful stop
process.once('SIGINT', () => bot.stop('SIGINT'))
process.once('SIGTERM', () => bot.stop('SIGTERM'))